// <auto-generated />
using System;
using Igtampe.Toffee.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Toffee.Data.Migrations
{
    [DbContext(typeof(ToffeeContext))]
    [Migration("20220830023110_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Igtampe.ChopoImageHandling.Image", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte[]>("Data")
                        .HasColumnType("bytea");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("Igtampe.Toffee.Common.Category", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatorUsername")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("IconID")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CreatorUsername");

                    b.HasIndex("IconID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Igtampe.Toffee.Common.Notification", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OwnerUsername")
                        .HasColumnType("text");

                    b.Property<Guid?>("TaskID")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("OwnerUsername");

                    b.HasIndex("TaskID");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("Igtampe.Toffee.Common.Task", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AssigneeUsername")
                        .HasColumnType("text");

                    b.Property<string>("AssignerUsername")
                        .HasColumnType("text");

                    b.Property<Guid?>("CategoryID")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateAssigned")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("StatusMessage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("AssigneeUsername");

                    b.HasIndex("AssignerUsername");

                    b.HasIndex("CategoryID");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("Igtampe.Toffee.Common.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ProfilePictureID")
                        .HasColumnType("uuid");

                    b.Property<int>("Rank")
                        .HasColumnType("integer");

                    b.HasKey("Username");

                    b.HasIndex("ProfilePictureID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Igtampe.Toffee.Common.Category", b =>
                {
                    b.HasOne("Igtampe.Toffee.Common.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorUsername");

                    b.HasOne("Igtampe.ChopoImageHandling.Image", "Icon")
                        .WithMany()
                        .HasForeignKey("IconID");

                    b.Navigation("Creator");

                    b.Navigation("Icon");
                });

            modelBuilder.Entity("Igtampe.Toffee.Common.Notification", b =>
                {
                    b.HasOne("Igtampe.Toffee.Common.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerUsername");

                    b.HasOne("Igtampe.Toffee.Common.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskID");

                    b.Navigation("Owner");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Igtampe.Toffee.Common.Task", b =>
                {
                    b.HasOne("Igtampe.Toffee.Common.User", "Assignee")
                        .WithMany()
                        .HasForeignKey("AssigneeUsername");

                    b.HasOne("Igtampe.Toffee.Common.User", "Assigner")
                        .WithMany()
                        .HasForeignKey("AssignerUsername");

                    b.HasOne("Igtampe.Toffee.Common.Category", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryID");

                    b.Navigation("Assignee");

                    b.Navigation("Assigner");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Igtampe.Toffee.Common.User", b =>
                {
                    b.HasOne("Igtampe.ChopoImageHandling.Image", "ProfilePicture")
                        .WithMany()
                        .HasForeignKey("ProfilePictureID");

                    b.Navigation("ProfilePicture");
                });

            modelBuilder.Entity("Igtampe.Toffee.Common.Category", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
